Structured Query Language
	*DDL (Data Definition Language): Instrucciones para crear, eliminar y modificar estructuras fisicas de la base de datos.
	Por ejemplo: tablas, procedimientos, vistas, indices, etc

	*DML (Data Manipulation Language): Instrucciones para insertar, eliminar y actualizar INFORMACION, por ejemplo, insertar un registro, modificar un registro, eliminar un registro.
		---Insertar registros:

		INSERT INTO nombre_tabla(campo1, campo2, ... , campon) 
		VALUES (valor1, valor2, ... , valorn);

		Ejemplo 1: 
		INSERT INTO tbl_categorias (codigo_categoria, nombre_categoria, descripcion) 
		VALUES (NULL, 'Social', 'Categoria para aplicaciones como facebook');

		Ejemplo 2 (Omitir el campo AI):
		INSERT INTO tbl_categorias (nombre_categoria, descripcion) 
		VALUES ('Social', 'Categoria para aplicaciones como facebook');

		Ejemplo 3: 
		INSERT INTO tbl_categorias
		VALUES (NULL, 'Social', 'Categoria para aplicaciones como facebook');

		---Actualizar registros

		UPDATE nombre_tabla
		SET campo1 = nuevo_valor1,
			campo2 = nuevo_valor2,
			.
			.
			.
			campo_n = nuevo_valor_n
		WHERE condicion; 
		//Usualmente en la condicion se filtra por la llave primaria

		Ejemplo:
		UPDATE tbl_categorias 
		SET nombre_categoria = 'Juegoz', 
			descripcion = 'Juegos como flappy bird'
		WHERE codigo_categoria = 2;

		---Eliminar registros

		DELETE FROM nombre_tabla
		WHERE condicion;
		//Usualmente en la condicion se filtra por la llave primaria


		Ejemplo:
		DELETE FROM tbl_categorias 
		WHERE codigo_categoria = 2;


	*QL (Query Language): Consultar informacion de la base de datos.
	Consultar informacion:

	SELECT campo_1, campo_2, ... , campo_n
	FROM nombre_tabla
	WHERE condicion;

	Ejemplos:
	SELECT * FROM tbl_categorias;

	SELECT codigo_categoria,
	    nombre_categoria,
	    descripcion
	FROM tbl_categorias;

	SELECT codigo_categoria,
	    nombre_categoria,
	    descripcion
	FROM tbl_categorias
	WHERE codigo_categoria = 2;


	SELECT codigo_categoria,
	    nombre_categoria,
	    descripcion
	FROM tbl_categorias
	WHERE nombre_categoria = 'Juegos'
	AND descripcion = 'Categoria de juegos';


	Operadores logicos en SQL estandar:
	AND
	OR
	NOT

	Operadores de comparacion
	>=
	<=
	<, >
	=
	!= , <>
	BETWEEN
	IS NULL
	IS NOT NULL

	Ejemplos Operadores:

	SELECT codigo_categoria,
	    nombre_categoria,
	    descripcion
	FROM tbl_categorias
	WHERE codigo_categoria >= 1
	AND codigo_categoria <=2;

	SELECT codigo_categoria,
		    nombre_categoria,
		    descripcion
		FROM tbl_categorias
	WHERE codigo_categoria BETWEEN 1 AND 2;


	SELECT codigo_categoria,
		    nombre_categoria,
		    descripcion
		FROM tbl_categorias
	WHERE descripcion IS NOT NULL;

	
	Cruces de informacion (Joins)

	SELECT CAMPOS
	FROM TABLA_1
	INNER JOIN TABLA_2
	ON (LLAVE_FORANEA_TABLA_1 = LLAVE_PRIMARIA_TABLA_2)
	[WHERE CONDICION];


	Ejemplo:
	SELECT A.codigo_aplicacion,
	    A.codigo_desarrollador,
	    B.nombre_desarrollador,
	    A.codigo_empresa,
	    C.nombre_empresa,
	    A.codigo_categoria,
	    D.nombre_categoria,
	    A.nombre_aplicacion,
	    A.version,
	    A.descripcion,
	    A.calificacion,
	    A.fecha_publicacion,
	    A.icono,
	    A.aplicacion
	FROM tbl_aplicaciones A
	INNER JOIN tbl_desarrolladores B
	ON (A.codigo_desarrollador = B.codigo_desarrollador)
	INNER JOIN tbl_empresas C
	ON (A.codigo_empresa = C.codigo_empresa)
	INNER JOIN tbl_categorias D
	ON (A.codigo_categoria = D.codigo_categoria);


JDBC (Java Database Connectivity)
	java.sql

Incluir controlador de mysql en el proyecto (.jar)
	Copiar el archivo .jar en una carpeta llamada lib en el raiz del proyecto
	Click derecho sobre el proyecto
	Build Path
	Configure Build Path
	Pestaña Libraries
	Add Jars
	Seleccionar el .jar dentro del proyecto.
	Ok.

Hay que tener cuidad de no seleccionar la opcion Add External Jars.
Si la carpeta lib no aparece en el proyecto, seleccionelo y presione F5 para actualizar.
